<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<manifest>
    <application name="CSK_Module_OPCUAServer">
        <crown name="CSK_Module_OPCUAServer">
            <desc>This is an automatically generated CROWN (description not necessary).</desc>
            <serves/>
        </crown>
        <crown name="CSK_OPCUAServer">
            <trait>released</trait>
            <desc>Module to provide OPC UA server functionality. Please check the OPCUA API docu of the device regarding further background information... +
Typically the features of this module are used like this (check also main script of this module): +
{empty} +
**1) Setup** +
1) Set the interface and port via 'setInterface' and 'setPort'. +
2) Optionally set application name and URI (see 'setApplicationName' and 'setApplicationURI') +
3) Set a namespace index (starting with 2) and optionally a namepsace URL (see 'setNamespaceIndex' and 'setNamespaceURL'). +
4) Call 'addNamespaceViaUI' to create a namespace. +
{empty} +
**2) Nodes** +
It is possible to create nodes within the currently selected namespace. +
1) Select a class for the node ('setNodeClass') and the node ID type and its ID ('setNodeIDType', 'setNodeID'). +
2) Via 'setNodeReference' and 'setNodeReferenceType' it is possible to configure the references of the node. +
3) Via 'setNodeType' (e.g. for nodes of class OBJECT) or 'setNodeDataType' / 'setNodeAccessLevel' (for nodes of class VARIABLE) further configuration can be done. +
4) If a node is a VARIABLE it is possible to set an event to receive values to set for this node via 'setEventToRegister'. +
5) Via 'addNodeViaUI' the preconfigured node can be added to the namespace. +
6) If the node is of class VARIABLE it will create an event like 'CSK_OPUAServer.OnNewValueUpdate_NAMESPACE_NODEID' to notify if the value of the node was written by the client. Other applications can register on these events. +
{empty} +</desc>
            <serves>
                <event name="OnNewStatusLoadParameterOnReboot">
                    <desc>Notify status if parameters should be loaded on app/device boot up.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnPersistentDataModuleAvailable">
                    <desc>Notify status if features of CSK_PersistendData module are available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnDataLoadedOnReboot">
                    <desc>Event to call if module tried to load parameters and should be ready.</desc>
                </event>
                <event name="OnNewParameterName">
                    <desc>Notify name of persistent data parameter.</desc>
                    <param desc="Parameter name" multiplicity="1" name="name" type="string"/>
                </event>
                <event name="OnUserLevelOperatorActive">
                    <desc>Status of Operator userlevel. Used internally in combination with the CSK_UserManagement module if available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnUserLevelMaintenanceActive">
                    <desc>Status of Maintenance userlevel. Used internally in combination with the CSK_UserManagement module if available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnUserLevelServiceActive">
                    <desc>Status of Service userlevel. Used internally in combination with the CSK_UserManagement module if available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnUserLevelAdminActive">
                    <desc>Status of Admin userlevel. Used internally in combination with the CSK_UserManagement module if available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewStatusCSKStyle">
                    <desc>Notify UI style to use for CSK modules.</desc>
                    <param desc="UI style" multiplicity="1" name="theme" type="string"/>
                </event>
                <event name="OnNewStatusModuleVersion">
                    <desc>Notify version of module.</desc>
                    <param desc="Version" multiplicity="1" name="version" type="string"/>
                </event>
                <event name="OnNewStatusModuleIsActive">
                    <desc>Notify if module can be used on device.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewStatusFlowConfigPriority">
                    <desc>Notify if FlowConfig should have priority for FlowConfig relevant configurations.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewStatusEventToRegister">
                    <desc>Notify event to register to and to process data.</desc>
                    <param desc="Name of event" multiplicity="1" name="eventName" type="string"/>
                </event>
                <event name="OnNewStatusApplicationName">
                    <desc>Notfiy application name.</desc>
                    <param desc="Application name." multiplicity="1" name="name" type="string"/>
                </event>
                <event name="OnNewStatusNamespaceIndex">
                    <desc>Notify index of namespace.</desc>
                    <param desc="Index" multiplicity="1" name="index" type="int"/>
                </event>
                <event name="OnNewStatusApplicationURI">
                    <desc>Notify URI of application.</desc>
                    <param desc="Application URI." multiplicity="1" name="uri" type="string"/>
                </event>
                <event name="OnNewStatusNodeIDType">
                    <desc>Notify type of node ID to create.</desc>
                    <param desc="Node ID type." multiplicity="1" name="type" type="string"/>
                </event>
                <event name="OnNewStatusNodeID">
                    <desc>Notify ID of node to create.</desc>
                    <param desc="Node ID." multiplicity="1" name="id" type="string"/>
                </event>
                <event name="OnNewStatusNodeAccessLevel">
                    <desc>Notify access level of node.</desc>
                    <param desc="Access level." multiplicity="1" name="level" type="string"/>
                </event>
                <event name="OnNewStatusNodeDataType">
                    <desc>Notify data type of node.</desc>
                    <param desc="Standard node type." multiplicity="1" name="type" type="string"/>
                </event>
                <event name="OnNewStatusInterface">
                    <desc>Notify interface to use for OPC UA server.</desc>
                    <param desc="Interface" multiplicity="1" name="interface" type="string"/>
                </event>
                <event name="OnNewStatusNodeClass">
                    <desc>Notify class of node to create.</desc>
                    <param desc="Class of node." multiplicity="1" name="class" type="string"/>
                </event>
                <event name="OnNewStatusNodeReference">
                    <desc>Notify node reference.</desc>
                    <param desc="Reference node." multiplicity="1" name="node" type="string"/>
                </event>
                <event name="OnNewStatusNodeType">
                    <desc>Notify type of node.</desc>
                    <param desc="Type of node (ROOT or VARIABLE)" multiplicity="1" name="nodeType" type="string"/>
                </event>
                <event name="OnNewStatusServerIsCurrentlyActive">
                    <desc>Notify status if server is currently active.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewStatusServerActive">
                    <desc>Notify status if server should be active.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewStatusNodeReferenceList">
                    <desc>Notify list of available node references.</desc>
                    <param desc="List of references." multiplicity="1" name="list" type="string"/>
                </event>
                <event name="OnNewStatusInterfaceList">
                    <desc>Notify list of available interfaces.</desc>
                    <param desc="List" multiplicity="1" name="list" type="string"/>
                </event>
                <event name="OnNewStatusAllNodesList">
                    <desc>Notify list of nodes.</desc>
                    <param desc="List" multiplicity="1" name="list" type="string"/>
                </event>
                <event name="OnNewStatusPort">
                    <desc>Notify port of OPC UA server.</desc>
                    <param desc="Port" multiplicity="1" name="port" type="int"/>
                </event>
                <event name="OnNewStatusNamespaceURL">
                    <desc>Notify URL of namespace.</desc>
                    <param desc="URL" multiplicity="1" name="url" type="string"/>
                </event>
                <event name="OnNewStatusNamespaceExists">
                    <desc>Notfiy if there is a namepsace.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewStatusSelectedNamespace">
                    <desc>Notify currently selected namespace.</desc>
                    <param desc="Namespace" multiplicity="1" name="namespace" type="string"/>
                </event>
                <event name="OnNewStatusNamespaceList">
                    <desc>Notify list of available namespaces.</desc>
                    <param desc="List of namespaces." multiplicity="1" name="list" type="string"/>
                </event>
                <event name="OnNewStatusNodeReferenceType">
                    <desc>Notify node reference type.</desc>
                    <param desc="Reference type." multiplicity="1" name="refType" type="string"/>
                </event>
                <event name="OnNewStatusNodeHasReference">
                    <desc>Notify status if node has a reference.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewValueUpdate_NAMESPACE_NODEID">
                    <trait>released</trait>
                    <desc>Example for dynamically created event to notify updates of nodes via client. +
"NAMESPACE" and "NODEID" will be replaced by related namespace and node ID (e.g. 'CSK_OPCUAServer.OnNewValueUpdate_NamespaceID2_NodeNo2'). +
This event will be created during runtime. So for users of this event, it is necessary to check first if this event is already available to be able to register to it. +
INFO: As this event will be created dynamically, there is no auto completion within SICK AppStudio available for such an event.</desc>
                    <param desc="Updated value." multiplicity="?" name="value" type="auto"/>
                </event>
                <event name="OnNewStatusCurrentNodeValue">
                    <desc>Notify value of currently selected node.</desc>
                    <param desc="Value" multiplicity="1" name="value" type="string"/>
                </event>
                <function name="setParameterName">
                    <desc>Function to set the name of the parameters if saved/loaded via the CSK_PersistentData module.</desc>
                    <param desc="Name of the parameter." multiplicity="1" name="name" type="string"/>
                </function>
                <function name="setLoadOnReboot">
                    <desc>Configure if this module should load its saved parameters at app/device boot up.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="pageCalled">
                    <desc>Function to register "OnResume" of the module UI (only as helper function).</desc>
                    <return desc="Empty string (only needed to simplify binding)." multiplicity="1" name="empty" type="string"/>
                </function>
                <function name="sendParameters">
                    <desc>Send parameters to CSK_PersistentData module if possible to save them.</desc>
                    <param desc="[Optional] Set to TRUE if the data should NOT be saved immediately after sending." multiplicity="?" name="noDataSave" type="bool"/>
                </function>
                <function name="loadParameters">
                    <desc>Load parameters for this module from the CSK_PersistentData module if possible and use them.</desc>
                    <return desc="Success to load parameters." multiplicity="1" name="success" type="bool"/>
                </function>
                <function name="getStatusModuleActive">
                    <desc>Function to get status if module is active.</desc>
                    <return desc="Status" multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="clearFlowConfigRelevantConfiguration">
                    <desc>Function to clear FlowConfig relevant configurations.</desc>
                </function>
                <function name="getParameters">
                    <trait>released</trait>
                    <desc>Function to get all parameters of the client in JSON format.</desc>
                    <return desc="JSON string with all parameters." multiplicity="1" name="jsonParameters" type="string"/>
                </function>
                <function name="resetModule">
                    <desc>Function to reset main configuration of module.</desc>
                </function>
                <function name="setEventToRegister">
                    <desc>Function to set event to receive data.</desc>
                    <param desc="Name of event." multiplicity="1" name="event" type="string"/>
                </function>
                <function name="setFlowConfigPriority">
                    <desc>Function to configure if FlowConfig should have priority for FlowConfig relevant configuration.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="setInterface">
                    <desc>Function to set interface to use for OPC UA server.</desc>
                    <param desc="Interface" multiplicity="1" name="interface" type="string"/>
                </function>
                <function name="setApplicationName">
                    <desc>Function to set application name.</desc>
                    <param desc="Name of application." multiplicity="1" name="name" type="string"/>
                </function>
                <function name="setNamespaceIndex">
                    <desc>Function to set index of namespace.</desc>
                    <param desc="Index" multiplicity="1" name="index" type="int"/>
                </function>
                <function name="setApplicationURI">
                    <desc>Function to set URL of application.</desc>
                    <param desc="URI" multiplicity="1" name="uri" type="string"/>
                </function>
                <function name="setNodeClass">
                    <desc>Function to set class of node.</desc>
                    <param desc="Class" multiplicity="1" name="class" type="string"/>
                </function>
                <function name="setNodeIDType">
                    <desc>Function to set type of node ID.</desc>
                    <param desc="Type of ID." multiplicity="1" name="idType" type="string"/>
                </function>
                <function name="setNodeID">
                    <desc>Function to set ID of node.</desc>
                    <param desc="Node ID." multiplicity="1" name="id" type="string"/>
                </function>
                <function name="setNodeDataType">
                    <desc>Function to set data type of Node.</desc>
                    <param desc="Data type." multiplicity="1" name="dataType" type="string"/>
                </function>
                <function name="setNodeAccessLevel">
                    <desc>Function to set access level of node.</desc>
                    <param desc="Acces level." multiplicity="1" name="level" type="string"/>
                </function>
                <function name="setNodeReference">
                    <desc>Function to set optional node reference.</desc>
                    <param desc="Reference node." multiplicity="1" name="node" type="string"/>
                </function>
                <function name="addNodeViaUI">
                    <desc>Function to add preconfigured node.</desc>
                </function>
                <function name="setServerActive">
                    <desc>Function set activation status of OPC UA server.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="setNodeType">
                    <desc>Function to set type of node.</desc>
                    <param desc="Type (ROOT or VARIABLE)" multiplicity="1" name="nodeType" type="string"/>
                </function>
                <function name="selectNodeViaUI">
                    <desc>Function to select specific node within UI table.</desc>
                    <param desc="Selection" multiplicity="1" name="selection" type="string"/>
                </function>
                <function name="deleteNodeViaUI">
                    <desc>Function to delete currently selected node via UI.</desc>
                </function>
                <function name="setPort">
                    <desc>Function to set port for server.</desc>
                    <param desc="Port" multiplicity="1" name="port" type="int"/>
                </function>
                <function name="setNamespaceURL">
                    <desc>Function to set URL of namespace.</desc>
                    <param desc="URL" multiplicity="1" name="url" type="string"/>
                </function>
                <function name="addNamespaceViaUI">
                    <desc>Function to add a namespace.</desc>
                </function>
                <function name="setNodeReferenceType">
                    <desc>Function to set optional node reference type.</desc>
                    <param desc="Reference type." multiplicity="1" name="refType" type="string"/>
                </function>
                <function name="deleteNamespaceViaUI">
                    <desc>Function to delete preselected namespace.</desc>
                </function>
                <function name="setSelectedNamespace">
                    <desc>Function to select namespace.</desc>
                    <param desc="Name of namespace." multiplicity="1" name="name" type="string"/>
                </function>
            </serves>
        </crown>
        <crown name="OPCUAServer_FC">
            <trait>released</trait>
            <desc>Crown to provide CSK_FlowConfig relevant features.</desc>
            <enum name="ModeType" trait="released" type="string">
                <desc>Type of optional mode...</desc>
                <item desc="TotalResult" name="TOTAL_SUBRESULTS">TOTAL_SUBRESULTS</item>
                <item desc="TotalResult " name="TOTAL_RESULT">TOTAL_RESULT</item>
            </enum>
            <serves/>
            <crown name="Consumer">
                <desc>Set something e.g. to process.</desc>
                <serves>
                    <function name="create">
                        <desc>Internally used CSK_FlowConfig create function.</desc>
                        <param desc="Optional parameter if needed..." multiplicity="1" name="mode" ref="ModuleName_FC.ModeType" type="enum"/>
                        <return desc="Handle to internally used FlowConfig instance." multiplicity="1" name="handle" type="handle"/>
                    </function>
                    <function name="consume">
                        <include>data-flow</include>
                        <desc>E.g. set source event of incoming data to process.</desc>
                        <param desc="Handle to internally used FlowConfig instance." multiplicity="1" name="handle" type="handle"/>
                        <param desc="E.g. event to set to get data to process.&#10;&#10;Parameter:&#10;(e.g. like)&#10;1: Data (STRING or IMAGE)&#10;2: Optional name to store data (STRING)" multiplicity="1" name="source" type="string"/>
                    </function>
                </serves>
            </crown>
            <crown name="Provider">
                <trait>released</trait>
                <desc>Provide e.g. result via an event like 'CSK_OPCUAServer.OnNewResult[InstanceNUM]'.</desc>
                <serves>
                    <event name="OnNewResult">
                        <include>data-flow</include>
                        <desc>Provide result via 'CSK_OPCUAServer.OnNewResult[InstanceName]' event.</desc>
                        <param desc="Handle to internally used FlowConfig instance." multiplicity="1" name="handle" type="handle"/>
                        <param desc="'CSK_OPCUAServer.OnNewResult[InstanceName]'&#10;&#10;Parameter:&#10;(e.g. like:)&#10;1: Data (STRING)&#10;2: Timestamp (INT)" multiplicity="1" name="OnNewResult" ref="MultiColorSelection_FC.ResultType" type="string"/>
                    </event>
                    <function name="create">
                        <trait>released</trait>
                        <desc>Internally used CSK_FlowConfig create function.</desc>
                        <return desc="Handle to internally used FlowConfig instance." multiplicity="1" name="handle" type="handle"/>
                    </function>
                    <function name="register">
                        <trait>released</trait>
                        <desc>Internally used CSK_FlowConfig register function.</desc>
                        <param desc="Handle to internally used FlowConfig instance." multiplicity="1" name="handle" type="handle"/>
                        <param desc="Internal parameter (not used)." multiplicity="1" name="eventname" type="string"/>
                        <param desc="Internally used callback function." multiplicity="1" name="callback" type="string"/>
                        <return desc="Success of register process." multiplicity="1" name="success" type="bool"/>
                    </function>
                </serves>
            </crown>
            <crown name="Process">
                <trait>released</trait>
                <desc>Set source event of incoming data and provide result event.</desc>
                <serves>
                    <function name="create">
                        <trait>released</trait>
                        <desc>Internally used CSK_FlowConfig create function.</desc>
                        <param desc="Optional mode if needed...." multiplicity="1" name="Mode" ref="ModuleName_FC.ModeType" type="enum"/>
                        <return desc="Handle to internally used FlowConfig instance." multiplicity="1" name="handle" type="handle"/>
                    </function>
                    <function name="process">
                        <include>data-flow</include>
                        <desc>Set source event of incoming data and provide result event.</desc>
                        <param desc="Handle to internally used FlowConfig instance." multiplicity="1" name="handle" type="handle"/>
                        <param desc="E.g. event to set to get data to process.&#10;&#10;Parameter:&#10;(e.g. like)&#10;1: Data (STRING or IMAGE)&#10;2: Optional name to store data (STRING)" multiplicity="1" name="source" type="string"/>
                        <return desc="'CSK_OPCUAServer.OnNewResult[InstanceName]'&#10;&#10;Parameter:&#10;(e.g. like:)&#10;1: Data (STRING)&#10;2: Timestamp (INT)" multiplicity="1" name="OnNewResult" type="string"/>
                    </function>
                </serves>
            </crown>
        </crown>
        <meta key="author">SICK AG</meta>
        <meta key="version">0.2.0</meta>
        <meta key="priority">low</meta>
        <meta key="copy-protected">false</meta>
        <meta key="read-protected">false</meta>
        <meta key="crown2-flow-engine">false</meta>
        <meta key="LuaLoadAllEngineAPI">false</meta>
        <entry default="CSK_Module_OPCUAServer.lua" path="scripts"/>
    </application>
</manifest>
